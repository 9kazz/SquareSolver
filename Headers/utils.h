#ifndef UTILS_H
#define UTILS_H

#include <windows.h>

/*functions*/

int terminal_input (int argc,       char* argv[],
                    double* coef_a, double* coef_b, double* coef_c,
                    char* file_name);

int run_oper (int oper,
              double* coef_a,  double* coef_b,  double* coef_c,
              char* file_name,
              bool* test_bool, bool* coef_bool, bool* file_bool,
              char* argv[],
              int* i);

int identify_oper (char* point_arg);

void pseudo_loading(void);

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//! Считывает значение коэффициентов уравнения, введенных пользователем
//!
//! @param coef_a (double*) указатель на старший коэффициент уравнения
//! @param coef_b (double*) указатель на второй коэффициент уравнения
//! @param coef_c (double*) указатель на свободный член уравнения
//! 
//! @par           При некорректном вводе коэффициентов просит ввести их еще раз до тех пор,
//!                пока коэффициенты не будут введены верно
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    void coef_input(double* coef_a, double* coef_b, double* coef_c); // coef_input

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//! Определяет режим использования программы: USER или DEVELOPER
//!
//! @param coef_a (double) старший коэффициент уравнения
//! @param coef_b (double) второй коэффициент уравнения
//! @param coef_c (double) свободный член уравнения
//!
//! @par          При вводе секретной комбинации коэффициентов "52 69 1488" включает режим DEVELOPER, иначе USER
//!
//! @return        DEVELOPER = 1, если введена секретная комбинация коэффициентов
//! @return        USER      = 0, если введены обыкновенные коэффициенты
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    int user_interface(double coef_a, double coef_b, double coef_c); // interacte with user
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//! Очищает буфер ввода
//!
//! @par При неправильном вводе коэффициентов очищает буфер ввода, чтобы функция coef_input могла снова считать данные
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    void clean_buffer(void);                                         // clean_buffer: cleans input buffer

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//! Печатает корни уравнения и их количество
//! 
//! @param nRoots (int) количество корней уравнения
//! @param ans_x1 (double) первый корень уравнения
//! @param ans_x2 (double) второй корень уравнения
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    void ans_output (int nRoots, double ans_x1, double ans_x2);      // ans_output

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//! Сравнивае число типа double с нулем
//! 
//! @param double_num (double) сравниваемое число
//!
//! @par              Сравнивает число с нулем с точностью до указанной погрешности DOUBLE_ACCUR
//!
//! @return           MORE,  если число больше 0
//! @return           EQUAL, если число равно  0
//! @return           LESS,  если число меньше 0
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    int double_zero_compare(double double_num);                      // double_zero_compare: compares double number with 0

/*enums*/

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//! Описывает количество корней уравнения
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    enum Root_options {
        INF_ROOTS = -1,                 ///< Уравнение имеет есконечное число корней
        NO_ROOTS  =  0,                 ///< Уравнение не имеет корней
        ONE_ROOT  =  1,                 ///< Уравнение имеет 1 корень
        TWO_ROOTS =  2                  ///< Уравнение имеет 2 корня
    };

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//! Описывает режимы использования программы
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    enum user_interface_commands {
        DEVELOPER = 1,                  ///<  Введен верный пароль и выполенен вход в режим администратора
        USER      = 0                   ///<  Выполнен вход в режим пользователя
    };

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//! Описывает результаты сравнения чисел с нулем
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    enum comperation {
        MORE  =  1,                     ///< Число больше нуля
        EQUAL =  0,                     ///< Число равно нулю
        LESS  = -1                      ///< Число меньше нуля
    };

    enum terminal_oper_reading {
        TEST           =  1,
        COEFFICIENTS   =  2,
        READ_FILE      =  3,
        INCOR_OPER     =  0,
        END_COM_STR    = -1
    };

/*definitions*/

//------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//! @defgroup Определение ANSI-кодировки цветов для текста и фона
//!  @ {

        /*Цвета текста*/
               
        #define BLUE                     "\033[34m"
        #define RED                      "\033[31m"
        #define YELLOW                   "\033[93m" 
        #define GREEN                    "\033[32m"

        /*Цвета фона*/
        #define BLUE_BG                  "\033[46m"
        #define GREEN_BG                 "\033[42m"

        /*Сброс текстовых модификаций*/
        #define RESET                    "\033[0m"
//!
//!  @ }
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#endif